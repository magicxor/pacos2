# see
# https://docs.github.com/en/actions/using-workflows/reusing-workflows
# https://rakesh-suryawanshi.medium.com/unit-testing-report-with-github-actions-7216f340044e
# https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net#building-and-testing-your-code

on:
  workflow_call:
    inputs:
      environment:
        type: string
        description: environment
        required: true

name: reusable test runner

jobs:
  run_tests:
    name: run tests
    runs-on: ubuntu-24.04
    environment: ${{ inputs.environment }}
    strategy:
      matrix:
        dotnet: [
          { tfm: net9.0, version: '9.0.x' },
        ]
    env:
      BUILD_CONFIG: Release
      SOLUTION: Pacos.slnx
      MAIN_PROJECT_DIR: Pacos

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Setup dotnet
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: |
          9.0.x

    - name: Display dotnet version
      run: |
        echo "matrix dotnet version: ${{ matrix.dotnet.version }}"
        dotnet --version

    - name: Copy config
      env:
        MCP_JSON_CONTENT: ${{ secrets.MCP }}
        BANWORDS_CONTENT: ${{ vars.BANWORDS }}
      run: |
        printf "%s" "$BANWORDS_CONTENT" > ./${{ env.MAIN_PROJECT_DIR }}/banwords.txt
        printf "%s" "$MCP_JSON_CONTENT" > ./${{ env.MAIN_PROJECT_DIR }}/mcp.json

    - name: Run tests
      run: |
        dotnet tool install --global Microsoft.CodeCoverage.Console

        dotnet test $SOLUTION -s .runsettings --configuration $BUILD_CONFIG --framework ${{ matrix.dotnet.tfm }} --logger trx --results-directory "TestResults" /maxcpucount:1 /p:CollectCoverage=true /p:CoverletOutputFormat="cobertura" /p:CoverletOutput="./TestResults/coverage" --verbosity normal

        MERGED_REPORT_PATH="./FinalCoverageReport/coverage.cobertura.xml"

        echo "Creating directory: $(dirname "$MERGED_REPORT_PATH")"
        mkdir -p "$(dirname "$MERGED_REPORT_PATH")"

        echo "Searching for coverage files..."
        find . -path '*/TestResults/coverage.cobertura.xml' -print0 | xargs -0 codecoverage merge -o "$MERGED_REPORT_PATH" -f cobertura

        if [ $? -eq 0 ]; then
          echo "Coverage files successfully merged into: $MERGED_REPORT_PATH"
        else
          echo "Error during coverage file merge."
          exit 1
        fi

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: dotnet-test-results-${{ matrix.dotnet.version }}
        path: TestResults

    - name: Publish test report
      uses: dorny/test-reporter@v1
      if: always()
      with:
        name: dotnet-test-results-${{ matrix.dotnet.version }}
        path: "**/*.trx"
        reporter: dotnet-trx
        fail-on-error: true

    - name: Create Test Coverage Badge
      uses: gaelgirodon/ci-badges-action@v1
      with:
        gist-id: 70cd9b762137a76d73edac28b2838156
        token: ${{ secrets.GIST_AUTH_TOKEN }}
