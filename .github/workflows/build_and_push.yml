# documentation:
# Environments -> Environment secrets: https://docs.github.com/en/actions/learn-github-actions/contexts#secrets-context
# Environments -> Environment variables: https://docs.github.com/actions/learn-github-actions/contexts#vars-context
# Secrets in reusable workflows: https://colinsalmcorner.com/consuming-environment-secrets-in-reusable-workflows/
on:
  workflow_call:
    inputs:
      environment:
        type: string
        description: environment to build and push to
        required: true
      tag:
        type: string
        description: tag for the docker image
        required: true

name: Build and push (reusable workflow)

jobs:
  build_and_push:
    name: Build and push
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    env:
      MAIN_PROJECT_DIR: Pacos
    steps:
      - uses: actions/checkout@v4

      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # https://github.com/docker/setup-qemu-action
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Copy config
        env:
          MCP_JSON_CONTENT: ${{ secrets.MCP }}
          BANWORDS_CONTENT: ${{ vars.BANWORDS }}
        run: |
          printf "%s" "$BANWORDS_CONTENT" > ./${{ env.MAIN_PROJECT_DIR }}/banwords.txt
          printf "%s" "$MCP_JSON_CONTENT" > ./${{ env.MAIN_PROJECT_DIR }}/mcp.json

      # https://github.com/docker/build-push-action
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          push: true
          context: .
          file: ./${{ env.MAIN_PROJECT_DIR }}/Dockerfile
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: |
            ${{ vars.DOCKER_REGISTRY }}/${{ vars.DOCKER_IMAGE }}:${{ inputs.tag }}
          platforms: |
            linux/amd64
            linux/arm64/v8
